/* CMSIS-DAP Interface Firmware
 * Copyright (c) 2009-2013 ARM Limited
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include "target_flash.h"

const uint32_t K64F_FLM[] = {
    0xE00ABE00, 0x062D780D, 0x24084068, 0xD3000040, 0x1E644058, 0x1C49D1FA, 0x2A001E52, 0x4770D1F2,
    0x4604b570, 0x4616460d, 0x5020f24c, 0x81c84939, 0x1028f64d, 0x460881c8, 0xf0208800, 0x80080001, 
    0x44484835, 0xf8b0f000, 0x2001b108, 0x2000bd70, 0xb530e7fc, 0x4a314603, 0x21032000, 0x4d30e006, 
    0x6814444d, 0x4021f845, 0x1e491d12, 0xdaf62900, 0x4448482b, 0xb510bd30, 0x44484827, 0xf886f000, 
    0xb92c4604, 0x48242100, 0xf0004448, 0x4604f947, 0xf836f000, 0xbd104620, 0x4604b570, 0x4448481e, 
    0x68c24621, 0xf840f000, 0xb93d4605, 0x4448481a, 0x46212300, 0xf00068c2, 0x4605f8e7, 0xf820f000, 
    0xbd704628, 0x4605b5fe, 0x4616460c, 0x46324623, 0x48114629, 0xf0004448, 0x4607f89f, 0x2000b967, 
    0xe9cd2201, 0x46332000, 0x46294622, 0x480a9002, 0xf0004448, 0x4607f923, 0xf802f000, 0xbdfe4638, 
    0x68404808, 0x0070f420, 0x0070f500, 0x60484905, 0x00004770, 0x40052000, 0x00000014, 0x40048054, 
    0x00000004, 0x4001f000, 0x47f0e92d, 0x460c4682, 0x46424690, 0x46504621, 0xf84ff000, 0xb1164606, 
    0xe8bd4630, 0xeb0487f0, 0x1e450008, 0x0d000528, 0x2001d004, 0x3715eb00, 0x3507ebc0, 0x4809e00d, 
    0x68004478, 0x20096004, 0x71c84907, 0xf92af000, 0xb1064606, 0xf504e003, 0x42ac5480, 0xbf00d9ef, 
    0xe7de4630, 0x000002c0, 0x40020000, 0x4604b510, 0x2004b90c, 0x2044bd10, 0x71c84902, 0xf912f000, 
    0x0000e7f8, 0x40020000, 0xb9094601, 0x47702004, 0x6cc04817, 0x6003f3c0, 0x447b4b16, 0x0010f833, 
    0xb90a0302, 0xe7f22064, 0x60082000, 0x2002604a, 0x02c06088, 0x200060c8, 0xb510e7e9, 0xb90b4603, 
    0xbd102004, 0x0f07f011, 0xf012d102, 0xd0010f07, 0xe7f62065, 0x42886818, 0xe9d3d805, 0x44200400, 
    0x42a0188c, 0x2066d201, 0x2000e7eb, 0x0000e7e9, 0x40048000, 0x00000246, 0x41f0e92d, 0x460f4680, 
    0x461d4614, 0x2004b914, 0x81f0e8bd, 0x4639462a, 0xf7ff4640, 0x4606ffd2, 0x4630b10e, 0xe019e7f4, 
    0x4478480f, 0x60076800, 0x490dcc01, 0x390a4479, 0x60486809, 0x490acc01, 0x39164479, 0x60886809, 
    0x49082007, 0xf00071c8, 0x4606f8ad, 0xe003b106, 0x3d083708, 0xd1e32d00, 0x4630bf00, 0x0000e7d4, 
    0x000001de, 0x40020000, 0x4dffe92d, 0x4682b082, 0x4621460c, 0x9a044650, 0xff9ff7ff, 0xf1bb4683, 
    0xd0030f00, 0xb0064658, 0x8df0e8bd, 0x0101e9da, 0xf7f1fbb0, 0x42794260, 0x42454008, 0xd10042a5, 
    0x9e04443d, 0xeba5e022, 0x45b00804, 0x46b0d900, 0x1018ea4f, 0x480f9001, 0x68004478, 0x20016004, 
    0x71c8490d, 0x0a009801, 0x980172c8, 0x98057288, 0xf0007248, 0x4683f867, 0x0f00f1bb, 0x4658d001, 
    0xeba6e7d1, 0x44440608, 0xbf00443d, 0xd1da2e00, 0xe7c82000, 0x00000148, 0x40020000, 0x4604b570, 
    0xb90c460d, 0xbd702004, 0x49032040, 0x460871c8, 0xf0007185, 0xe7f6f847, 0x40020000, 0x4dffe92d, 
    0x4617460c, 0xe9dd461d, 0xf8ddb80c, 0xb91da038, 0xb0042004, 0x8df0e8bd, 0x4621463a, 0xf7ff9800, 
    0x4606ff3c, 0x4630b10e, 0xe022e7f3, 0x44784813, 0x60046800, 0x49122002, 0x460871c8, 0xb00bf880, 
    0x4479490e, 0x68283914, 0x60886809, 0xf81af000, 0xb15e4606, 0x0f00f1b8, 0xf8c8d001, 0xf1ba4000, 
    0xd0020f00, 0xf8ca2000, 0xe0040000, 0x1d2d1f3f, 0x2f001d24, 0xbf00d1da, 0xe7ca4630, 0x000000b2, 
    0x40020000, 0x4a0e2070, 0x20807010, 0xbf007010, 0x7800480b, 0xd0fb09c0, 0x78014809, 0x0f20f011, 
    0x2067d001, 0xf0114770, 0xd0010f10, 0xe7f92068, 0x0f01f011, 0x2069d001, 0x2000e7f4, 0x0000e7f2, 
    0x40020000, 0x00000000, 0x00080000, 0x00100000, 0x00200000, 0x00400000, 0x00800000, 0x01000000, 
    0x01000000, 0x40020004, 0x00000000, 
};

static const TARGET_FLASH flash = {
    0x20000021, // Init
    0x20000053, // UnInit
    0x20000077, // EraseChip
    0x20000099, // EraseSector
    0x200000C5, // ProgramPage
    // breakpoint = RAM start + 1
    // RSB : base address is address of Execution Region PrgData in map file
    //       to access global/static data
    // RSP : Initial stack pointer
    {
        0x20000001, // breakpoint instruction address
        0x20000000 + 0x20 + 0x408,  // static base register value (image start + header + static base offset)
        0x20001000 // initial stack pointer
    },

    0x20001100, // flash_buffer, any valid RAM location with > 512 bytes of working room and proper alignment
    0x20000000, // algo_start, start of RAM
    sizeof(K64F_FLM), // algo_size, size of array above
    K64F_FLM, // image, flash algo instruction array
    512              // ram_to_flash_bytes_to_be_written
};


